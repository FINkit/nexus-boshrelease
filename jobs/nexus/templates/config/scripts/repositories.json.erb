{
   "name": "repositories",
   "type": "groovy",
   "content": "import org.sonatype.nexus.blobstore.api.BlobStoreManager\r\nimport org.sonatype.nexus.repository.storage.WritePolicy\r\nimport org.sonatype.nexus.repository.maven.VersionPolicy\r\nimport org.sonatype.nexus.repository.maven.LayoutPolicy\r\n\r\ntry { repository.createMavenProxy(\"central\", \"https:\/\/repo1.maven.org\/maven2\/\", BlobStoreManager.DEFAULT_BLOBSTORE_NAME, true, VersionPolicy.RELEASE, LayoutPolicy.PERMISSIVE) } catch (Exception e) { println \"Error thrown creating central: \" + e.getMessage() }\r\n\r\ntry { repository.createMavenProxy(\"clojars\", \"https:\/\/clojars.org\/repo\/\",\r\n        BlobStoreManager.DEFAULT_BLOBSTORE_NAME, true, VersionPolicy.RELEASE, LayoutPolicy.PERMISSIVE) } catch (Exception e) { println \"Error thrown creating central: \" + e.getMessage() }\r\n\r\ntry { repository.createMavenProxy(\"jenkins-releases\", \"https:\/\/repo.jenkins-ci.org\/releases\/\",\r\n        BlobStoreManager.DEFAULT_BLOBSTORE_NAME, true, VersionPolicy.RELEASE, LayoutPolicy.PERMISSIVE) } catch (Exception e) { println \"Error thrown creating central: \" + e.getMessage() }\r\n\r\ntry { repository.createMavenProxy(\"spring-milestones\", \"https:\/\/repo.spring.io\/libs-milestone\/\",\r\n        BlobStoreManager.DEFAULT_BLOBSTORE_NAME, true, VersionPolicy.RELEASE, LayoutPolicy.PERMISSIVE) } catch (Exception e) { println \"Error thrown creating central: \" + e.getMessage() }\r\n\r\ntry { repository.createMavenProxy(\"spring-releases\", \"https:\/\/repo.spring.io\/release\/\",\r\n        BlobStoreManager.DEFAULT_BLOBSTORE_NAME, true, VersionPolicy.RELEASE, LayoutPolicy.PERMISSIVE) } catch (Exception e) { println \"Error thrown creating central: \" + e.getMessage() }\r\n\r\ntry { repository.createRawHosted(\"raw-internal\", \"internal\",\r\n        false, WritePolicy.ALLOW_ONCE)\r\n\r\nrepository.createMavenHosted(\"releases-deployables\", \"releases\",\r\n        false, VersionPolicy.RELEASE, WritePolicy.ALLOW_ONCE, LayoutPolicy.PERMISSIVE) } catch (Exception e) { println \"Error thrown creating central: \" + e.getMessage() }\r\n\r\ntry { repository.createMavenHosted(\"releases-libs\", \"releases\",\r\n        false, VersionPolicy.RELEASE, WritePolicy.ALLOW_ONCE, LayoutPolicy.PERMISSIVE) } catch (Exception e) { println \"Error thrown creating central: \" + e.getMessage() }\r\n\r\ntry { repository.createMavenHosted(\"snapshots-libs\", \"snapshots\",\r\n        false, VersionPolicy.RELEASE, WritePolicy.ALLOW, LayoutPolicy.PERMISSIVE) } catch (Exception e) { println \"Error thrown creating central: \" + e.getMessage() }\r\n\r\ntry { repository.createMavenHosted(\"thirdparty\", BlobStoreManager.DEFAULT_BLOBSTORE_NAME,\r\n        false, VersionPolicy.RELEASE, WritePolicy.ALLOW_ONCE, LayoutPolicy.PERMISSIVE) } catch (Exception e) { println \"Error thrown creating central: \" + e.getMessage() }\r\n\r\n\r\ntry { repository.createMavenGroup(\"public\", publicGroup, BlobStoreManager.DEFAULT_BLOBSTORE_NAME) } catch (Exception e) { println \"Error thrown creating central: \" + e.getMessage() }\r\n\r\ndef publicGroup = [\"central\", \"clojars\", \"releases-deployables\", \"releases-libs\", \"snapshots-libs\", \"thirdparty\"]\r\ntry { repository.createMavenGroup(\"public\", publicGroup, BlobStoreManager.DEFAULT_BLOBSTORE_NAME) } catch (Exception e) { println \"Error thrown creating central: \" + e.getMessage() }"
}
