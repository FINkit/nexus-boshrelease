{
   "name": "repositories",
   "type": "groovy",
   "content": "import org.sonatype.nexus.blobstore.api.BlobStoreManager\r\nimport org.sonatype.nexus.repository.storage.WritePolicy\r\nimport org.sonatype.nexus.repository.maven.VersionPolicy\r\nimport org.sonatype.nexus.repository.maven.LayoutPolicy\r\n\r\n\/\/ Creating central maven proxy \r\ntry {\r\n  repository.createMavenProxy(\"central\",\r\n    \"https:\/\/repo1.maven.org\/maven2\/\",\r\n    \"default\",\r\n    true,\r\n    VersionPolicy.RELEASE,\r\n    LayoutPolicy.PERMISSIVE)\r\n} catch (Exception e) {\r\n  println \"Error thrown creating central: \" + e.getMessage()\r\n}\r\n\r\n\/\/ Creating clojars maven proxy\r\ntry {\r\n  repository.createMavenProxy(\"clojars\",\r\n    \"https:\/\/clojars.org\/repo\/\",\r\n    \"default\",\r\n    true,\r\n    VersionPolicy.RELEASE,\r\n    LayoutPolicy.PERMISSIVE)\r\n} catch (Exception e) {\r\n  println \"Error thrown creating clojars: \" + e.getMessage()\r\n}\r\n\r\n\/\/ Creating jenkins-releases maven proxy\r\ntry {\r\n  repository.createMavenProxy(\"jenkins-releases\",\r\n    \"https:\/\/repo.jenkins-ci.org\/releases\/\",\r\n    \"default\",\r\n    true,\r\n    VersionPolicy.RELEASE,\r\n    LayoutPolicy.PERMISSIVE)\r\n} catch (Exception e) {\r\n  println \"Error thrown creating jenkins-releases: \" + e.getMessage()\r\n}\r\n\r\n\/\/ Creating maven-central maven proxy\r\ntry {\r\n  repository.createMavenProxy(\u201Cmaven-central\u201D,\r\n    \"https:\/\/repo1.maven.org\/maven2\/\",\r\n    \"default\",\r\n    true,\r\n    VersionPolicy.RELEASE,\r\n    LayoutPolicy.PERMISSIVE)\r\n} catch (Exception e) {\r\n  println \"Error thrown creating jenkins-releases: \" + e.getMessage()\r\n}\r\n\r\n\/\/ Creating maven-public maven group\r\ndef publicGroup = [\u201Cmaven-releases\u201D, \u201Cmaven-snapshots\u201C, \u201Cmaven-central\u201D]\r\ntry {\r\n  repository.createMavenGroup(\u201Cmaven-public\",\r\n    publicGroup,\r\n    \u201Cdefault\u201D)\r\n} catch (Exception e) {\r\n  println \"Error thrown creating maven-public: \" + e.getMessage()\r\n}\r\n\r\n\/\/ Creating maven-releases maven hosted\r\ntry {\r\n  repository.createMavenHosted(\u201Cmaven-releases\",\r\n    \u201Creleases\u201D,\r\n    false,\r\n    VersionPolicy.RELEASE,\r\n    WritePolicy.ALLOW_ONCE,\r\n    LayoutPolicy.STRICT)\r\n} catch (Exception e) {\r\n  println \"Error thrown creating maven-releases: \" + e.getMessage()\r\n}\r\n\r\n\/\/ Creating maven-snapshots maven hosted\r\ntry {\r\n  repository.createMavenHosted(\u201Cmaven-snapshots\u201D,\r\n    \u201Csnapshots\u201D,\r\n    false,\r\n    VersionPolicy.SNAPSHOT,\r\n    WritePolicy.ALLOW,\r\n    LayoutPolicy.STRICT)\r\n} catch (Exception e) {\r\n  println \"Error thrown creating maven-snapshots: \" + e.getMessage()\r\n}\r\n\r\n\/\/ Creating raw-internal raw hosted\r\ntry {\r\n  repository.createRawHosted(\"raw-internal\",\r\n    \"internal\",\r\n    false,\r\n    WritePolicy.ALLOW_ONCE)\r\n} catch (Exception e) {\r\n  println \"Error thrown creating raw-internal: \" + e.getMessage()\r\n}\r\n\r\n\/\/ Creating releases-deployables maven hosted\r\ntry {\r\n  repository.createMavenHosted(\"releases-deployables\",\r\n    \"releases\",\r\n    false,\r\n    VersionPolicy.RELEASE,\r\n    WritePolicy.ALLOW_ONCE,\r\n    LayoutPolicy.PERMISSIVE)\r\n} catch (Exception e) {\r\n  println \"Error thrown creating releases-deployables: \" + e.getMessage()\r\n}\r\n\r\n\/\/ Creating releases-deployables-proxied maven proxy\r\ntry {\r\n  repository.createMavenProxy(\u201Creleases-deployables-proxied\u201D,\r\n    \"https:\/\/nexus.build.finkit.io\/repository\/releases-deployables\/\",\r\n    \"releases\",\r\n    true,\r\n    VersionPolicy.RELEASE,\r\n    LayoutPolicy.STRICT)\r\n} catch (Exception e) {\r\n  println \"Error thrown creating releases-deployables-proxied: \" + e.getMessage()\r\n}\r\n\r\n\/\/ Creating releases-libs maven hosted repository\r\ntry {\r\n  repository.createMavenHosted(\"releases-libs\",\r\n    \"releases\",\r\n    false,\r\n    VersionPolicy.RELEASE,\r\n    WritePolicy.ALLOW_ONCE,\r\n    LayoutPolicy.PERMISSIVE)\r\n} catch (Exception e) {\r\n  println \"Error thrown creating releases-libs: \" + e.getMessage()\r\n}\r\n\r\n\/\/ Creating releases-libs-proxied maven proxy\r\ntry {\r\n  repository.createMavenProxy(\u201Creleases-libs-proxied\u201D,\r\n    \"https:\/\/nexus.build.finkit.io\/repository\/releases-libs\/\",\r\n    \"releases\",\r\n    true,\r\n    VersionPolicy.RELEASE,\r\n    LayoutPolicy.STRICT)\r\n} catch (Exception e) {\r\n  println \"Error thrown creating releases-libs-proxied: \" + e.getMessage()\r\n}\r\n\r\n\/\/ Creating snapshot-libs maven hosted repository\r\ntry {\r\n  repository.createMavenHosted(\"snapshots-libs\",\r\n    \"snapshots\",\r\n    false,\r\n    VersionPolicy.SNAPSHOT,\r\n    WritePolicy.ALLOW,\r\n    LayoutPolicy.PERMISSIVE)\r\n} catch (Exception e) {\r\n  println \"Error thrown creating snapshot-libs: \" + e.getMessage()\r\n}\r\n\r\n\/\/ Creating snapshots-libs-proxied maven proxy\r\ntry {\r\n  repository.createMavenProxy(\u201Csnapshots-libs-proxied\u201D,\r\n    \"https:\/\/nexus.build.finkit.io\/repository\/snapshots-libs\/\",\r\n    \u201Csnapshots\u201D,\r\n    true,\r\n    VersionPolicy.SNAPSHOT,\r\n    LayoutPolicy.STRICT)\r\n} catch (Exception e) {\r\n  println \"Error thrown creating snapshots-libs-proxied: \" + e.getMessage()\r\n}\r\n\r\n\/\/ Creating spring-milestones maven proxy\r\ntry {\r\n  repository.createMavenProxy(\"spring-milestones\",\r\n    \"https:\/\/repo.spring.io\/libs-milestone\/\",\r\n    \"default\",\r\n    true,\r\n    VersionPolicy.RELEASE,\r\n    LayoutPolicy.PERMISSIVE)\r\n} catch (Exception e) {\r\n    println \"Error thrown creating spring-milestones: \" + e.getMessage()\r\n}\r\n\r\n\/\/ Creating spring-releases maven proxy\r\ntry {\r\n  repository.createMavenProxy(\"spring-releases\",\r\n    \"https:\/\/repo.spring.io\/release\/\",\r\n    \"default\",\r\n    true,\r\n    VersionPolicy.RELEASE,\r\n    LayoutPolicy.PERMISSIVE)\r\n} catch (Exception e) {\r\n  println \"Error thrown creating spring-releases: \" + e.getMessage()\r\n}\r\n\r\n\/\/ Creating thirdparty maven hosted repository\r\ntry {\r\n  repository.createMavenHosted(\"thirdparty\",\r\n    \"thirdparty\",\r\n    false,\r\n    VersionPolicy.RELEASE,\r\n    WritePolicy.ALLOW_ONCE,\r\n    LayoutPolicy.PERMISSIVE)\r\n} catch (Exception e) {\r\n  println \"Error thrown creating thirdparty: \" + e.getMessage()\r\n}\r\n\r\n\/\/ Creating public maven group\r\ndef publicGroup = [\"central\", \"clojars\", \"releases-deployables\", \"releases-deployables-proxied\u201C, \"releases-libs\", \"releases-libs-proxied\u201C, \"snapshots-libs\", \"snapshots-libs-proxied\u201C, \u201Cspring-milestones\u201D, \u201Cspring-releases\u201D, \"thirdparty\"]\r\ntry {\r\n  repository.createMavenGroup(\"public\",\r\n    publicGroup,\r\n    \"public\")\r\n} catch (Exception e) {\r\n  println \"Error thrown creating public: \" + e.getMessage()\r\n}"
}
